name: Build & Publish UI Platform

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'package.json'
      - 'rollup.config.js'
      - 'tsconfig.json'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run validation scripts
      run: |
        npm run validate || echo "Validation completed with warnings"
    
    - name: Test script utilities
      run: |
        node scripts/utils/logger.js || echo "Logger test completed"
        node scripts/utils/shell-utils.js || echo "Shell utils test completed"

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build platform (if build script exists)
      run: |
        if npm run build --dry-run 2>/dev/null; then
          npm run build
        else
          echo "No build script found, platform is script-based"
        fi
    
    - name: Test package creation
      run: npm pack --dry-run
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ui-platform-files
        path: |
          scripts/
          src/
          package.json
          README.md
        retention-days: 30

  semantic-release:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        scope: '@tamyla'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build for release
      run: npm run build
    
    - name: Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_GITHUB_ACTION_AUTO }}
      run: |
        if [ -z "$NODE_AUTH_TOKEN" ]; then
          echo "NPM_GITHUB_ACTION_AUTO not available - skipping semantic release"
          exit 0
        fi
        npx semantic-release
      continue-on-error: true

  publish-packages:
    runs-on: ubuntu-latest
    needs: semantic-release
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        scope: '@tamyla'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build packages
      run: npm run build
    
    - name: Publish to NPM
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_GITHUB_ACTION_AUTO }}
      run: |
        if [ -z "$NODE_AUTH_TOKEN" ]; then
          echo "NPM_GITHUB_ACTION_AUTO not available - skipping publish"
          exit 0
        fi
        # Publish UI Platform package
        npm publish --access public

  deploy-cdn:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ui-platform-files
        path: dist/
    
    - name: Deploy to CDN
      env:
        CDN_API_KEY: ${{ secrets.CDN_API_KEY }}
        CDN_ENDPOINT: ${{ secrets.CDN_ENDPOINT }}
      run: |
        # Upload to CDN (UI Platform)
        for file in dist/*.js dist/*.css; do
          if [ -f "$file" ]; then
            curl -X PUT \
              -H "Authorization: Bearer $CDN_API_KEY" \
              -H "Content-Type: application/octet-stream" \
              --data-binary "@$file" \
              "$CDN_ENDPOINT/tamyla-ui-platform/$(basename $file)"
          fi
        done
      continue-on-error: true
